<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>demo</name>
	<description>Demo project for Spring Boot</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>21</java.version>
		<node.version> v20.10.0 </node.version>
		<npm.version> 10.4.0 </npm.version>
	</properties>
		<dependencies>
			<!-- Spring Boot Starter for Thymeleaf templates -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-thymeleaf</artifactId>
			</dependency>
			
			<!-- Spring Boot Starter for Web applications -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-security</artifactId>
			</dependency>

			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-test</artifactId>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-validation</artifactId>
			</dependency>



			<!-- Spring Boot Starter for Testing -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<scope>test</scope>
			</dependency>

			<!-- Spring Boot Starter for JPA (Hibernate) -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-jpa</artifactId>
			</dependency>

			<!-- PostgreSQL Database Driver -->
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>42.6.0</version> <!-- Ensure this is the latest version -->
			</dependency>

			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
			</dependency>

			<!-- Optional: If you need REST functionality for JPA repositories -->
			
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-rest</artifactId>
			</dependency>

			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<optional>true</optional>
			</dependency>

			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId> jjwt-api</artifactId>
				<version>0.11.5</version>
			</dependency>

			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId> jjwt-impl</artifactId>
				<version>0.11.5</version>
			</dependency>

			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId> jjwt-jackson</artifactId>
				<version>0.11.5</version>
			</dependency>

		</dependencies>


	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
			<groupId>com.github.eirslett</groupId>
			<artifactId>frontend-maven-plugin</artifactId>
			<version>1.15.0</version>
			<executions>

				<execution>
					<id>install node and npm</id>
					<goals>
						<goal>install-node-and-npm</goal>
					</goals>
					<phase>generate-resources</phase>
					<configuration>
						<nodeVersion>${node.version}</nodeVersion>
						<npmVersion>${npm.version}</npmVersion>
					</configuration>
				</execution>

				<execution>
					<id>npm install</id>
					<goals>
						<goal>npm</goal>
					</goals>
					<phase>generate-resources</phase>
					<configuration>
						<arguments>install</arguments>
					</configuration>
				</execution>

				<execution>
					<id>npm build</id>
					<goals>
						<goal>npm</goal>
					</goals>
					<phase>generate-resources</phase>
					<configuration>
						<arguments>run build</arguments>
					</configuration>
				</execution>

			</executions>
			<configuration>
				<nodeVersion>${node.version}</nodeVersion>
				<workingDirectory>src/main/frontend</workingDirectory>
				<installDirectory>target</installDirectory>
			</configuration>
			</plugin>

		</plugins>
	</build>

</project>
